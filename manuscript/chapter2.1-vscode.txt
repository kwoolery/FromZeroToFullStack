## 2.1 Visual Studio Code

Visual Studio Code is a lightweight code editor produced by Microsoft, and released in 2015 for Windows, Linux, and macOS. It's a highly customizable environment with plugins for virtually all programming, and markup languages. It supports syntax highlighting, code completion, debugging, and source control with Git, which we will discuss in the next chapter. It also has an integrated terminal from executing programs and scripts from the command line.

There is no requirement to use Visual Studio Code to build the project described in this book, however some references will be made to Visual Studio Code throughout the book. The principal thing to remember is that the choice of a development environment is an important one for any developer. When efficiency, and productivity are paramount, it's critical to be comfortable in your workspace, and not have to context switch between disparate tools. Visual Studio Code isn't the only available editor, there are many great options in the market, such as Atom, Sublime Text 2, the Jetbrains Suite, including GoLand, and WebStorm. My advice would be to choose an development environment, and familiarize yourself with the features that will make you the most productive.

I'll describe the installation process, customization, and plugins necessary to create the Visual Studion Code environment that will help us build the project in the most efficient way possible. 

### 3.1.1 Installation

Download the appropriate installer for your operating system from 

https://code.visualstudio.com/Download 

and follow the instructions to install Visual Studio Code. 

{height=20%,float=center}
![Visual Studio Code Download](images/chapter2.1-vscode/download-vs-code.png)

For Mac, you unzip the downloaded file, and drag the Visual Studio Code application directly into the Applications folder. 

For Windows, you double-click on the downloaded VSCodeUserSetup file, and follow the installation wizard instructions. Typically, the default options should work for most people.

For Ubuntu, or Debian, there are multiple ways to install the downloaded deb file. 

* From the directoy you downloaded the file to, run the following commands, for example, if the file you downloaded is called code_1.27.2-1536736588_amd64.deb, the you can run:

```bash
    sudo dpkg -i ./code_1.27.2-1536736588_amd64.deb && sudo apt-get install -f .
```
 
 or 

 ```bash
    sudo apt install ./code_1.27.2-1536736588_amd64.deb
```

* From the GUI, find the deb file that was downloaded, and double-click from the desktop to instantiate the default package manager, typically Synaptic Package Manager for Ubuntu.

Once installed, you should open Visual Studio Code, and see the following screen:

{height=20%,float=center}
![Visual Studio Code Welcome Page](images/chapter2.1-vscode/welcome.png)

### 3.1.2 Installing Extensions

One of the advantages of Visual Studio Code is the unlimited functionality provided by extensions. In order to get the most of Visual Studio Code, and to make our lives easier as developers, we're going to install a few that will give us additional tools for managing our code, language specific synatx highlighting, and easy access to runtime enviornments for streamlining our development process. 

There's an extension button on the Visual Studio side nav that gives you access to the extensions panel. The installation of extensions is extremely easy. First, find the extensions button on the left hand side nav, and click it, or choose View->Extensions from the top level menu. 

![Extensions Button](images/chapter2.1-vscode/extension-button.png)

This will take you to the extensions panel as seen below. 

![Extensions Panel](images/chapter2.1-vscode/extension-panel.png)

In order to install an extension, search the marketplace to find the exentions, then click on the green install button, and follow the directions. After the installation, the install button will become a reload button. Clicking on the reload button will restart Visual Studio Code with the new extension activated. The restart will maintain your current environment.

The following is a list of extensions that we'll be using throughout the rest of the book with a brief description of what functionality they provide. 

#### GitLens
GitLens supercharges the Git capabilities built into Visual Studio Code. It helps you to visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more. *From Extension Details by Eric Amodio*

#### Code Runner
Run code snippet or code file for multiple languages: C, C++, Java, JavaScript, PHP, Python, Perl, Perl 6, Ruby, Go, Lua, Groovy, PowerShell, BAT/CMD, BASH/SH, F# Script, F# (.NET Core), C# Script, C# (.NET Core), VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml Script, R, AppleScript, Elixir, Visual Basic .NET, Clojure, Haxe, Objective-C, Rust, Racket, AutoHotkey, AutoIt, Kotlin, Dart, Free Pascal, Haskell, Nim, D, and custom command. *From Extension Details by Jun Han*

#### Docker
The Docker extension makes it easy to build, manage and deploy containerized applications from Visual Studio Code. *From Extension Details by Microsoft*

#### Go
This extension adds rich language support for the Go language to VS Code. *From Extension Details by Microsoft* 

#### HTML CSS Support
Visual Studio Code CSS Support for HTML Documents. Provides missing CSS support for HTML documents, as well as some features such as class attribute completion, ID attribute complettion, and support for remote files. 

#### React Native Tools
This extension provides a development environment for React Native projects. Using this extension, you can debug your code and quickly run react-native commands from the command palette. *From Extension Details by Visual Studio Mobile Tools* 

#### Git History
The Git History extension provides advanced view and search into git logs, and allows you to easily compare commits, cherry-pick commits, and revert when necessary.

